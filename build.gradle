buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.1-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'

version = "1.0"
group= "haun.guru.tcon.controls" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "tcontrols"

minecraft {
    version = "1.9-12.16.1.1907"
    runDir = "run"
    
    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not allways work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = "snapshot_20160312"
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.

    // Use upstream Access Transformers, so runClient/debugClient work
    useDepAts = true
}

repositories {
	mavenLocal()
	//progwml6's Maven: has Tcon/Mantle
	maven {
		url "http://dvs1.progwml6.com/files/maven/"
	}
}

dependencies {
    	deobfCompile "slimeknights:TConstruct:1.9-2.3.1.+"
	deobfCompile "slimeknights.mantle:Mantle:1.9-0.10.1.+"
	//ComputerCraft will go here when it has a 1.9 release
	//Opencomputers will go here when it has a 1.9 release

}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

jar {
    manifest{
        attributes(
                "FMLCorePluginContainsFMLMod": "true",
                "FMLCorePlugin":"guru.haun.tcon.controls.TControlsLoadingPlugin"
        )
    }
}
